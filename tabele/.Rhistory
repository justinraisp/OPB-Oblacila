x=c[1,2,3]
x=c(1,2,3)
x
x[-1]
x
x[x>=2]= x[x>=3] +3
x
x=c(1,2,3)
x[x>=2]= x[x>=2] +3
x
# Če vektorju nastavimo dimenzije, postane matrika, kjer gredo elementi
# najprej od zgoraj navzdol, nato pa od leve proti desni.
x <- 1 : 100
dim(x) <- c(5, 20) # x naj bo matrika dimenzije 5 × 20
x
dim(x) <- c(10, 10) # x naj bo matrika dimenzije 10 × 10
x
c(x[4, 5], x[6, 9]) # elementa v 4. vrstici in 5. stolpcu
# Ukaza `row` in `col` vrneta matriko indeksov vrstic in stolpcev.
# Ukaza sta uporabna predvsem v indeksnih vektorjih
x[row(x) %in% c(2, 3, 5, 7)] # vsi elementi v 2., 3., 5. in 7. vrstici
# Seveda spreminjanje dimenzij ni najbolj pameten način ustvarjanja matrik
# Več vektorjev enake dolžine lahko zložimo v matriko po vrsticah z ukazom
# `rbind` ali po stolpcih z ukazom `cbind`.
ocene <- rbind(Miha = c(mat = 5, sjk = 3, fiz = 3),
Maja = c(mat = 4, sjk = 5, fiz = 4))
ocene
ocene["Miha", "mat"]
# Pozor: veljajo imena stolpcev prvega vnosa:
ocene <- rbind(Miha = c(mat = 5, sjk = 3, fiz = 3),
Maja = c(kem = 4, bio = 5, geo = 4))
ocene
A = matrix(i,n,n)
# ========================================================================
# 1.
# Sestavi matriko velikosti `n` × `n` z vektorjem `d` na diagonali ter
# številom `i` izven diagonale.
# ========================================================================
n <- 10
d <- seq(2,11, length.out = n)
i <- 10
A = matrix(i,n,n)
A[row(x) == col(x)] = d
A
# ========================================================================
# 2.
# Sestavi matriko velikosti `n` × `n`, ki ima na mestu `(i,j)` vrednost
# `1/(i+j-1)`. Namig: uporabi funkcijo `outer`.
# ========================================================================
n <- 10
B = outer(0:n,0:n, function(i,j) 1/(i+j-1))
B
# ========================================================================
# 2.
# Sestavi matriko velikosti `n` × `n`, ki ima na mestu `(i,j)` vrednost
# `1/(i+j-1)`. Namig: uporabi funkcijo `outer`.
# ========================================================================
n <- 10
B = outer(0:n,0:n, function(i,j) 1/(i+j-1))
B
B = outer(1:n,1:n, function(i,j) 1/(i+j-1))
B
View(B)
B
# Vsi elementi vektorjev v R-ju morajo biti istega tipa. Če pa želimo
# sestaviti več podatkov različnih tipov, napišemo seznam.
# Sezname lahko sestavimo neposredno z ukazom `list`.
list(1, 2, "abc")
oseba <- list(ime = "Janez", priimek = "Novak", starost = 20,
naslov = list(ulica = "Prešernova", stevilka = 14),
starsi = c("Franci", "Francka"))
oseba
A = matrix(i,n,n)
A[row(x) == col(x)+1] = d
A
A[row(x) == col(x)] = d
View(oseba)
oseba
oseba$ime
oseba[2]
oseba[["naslov"]]
oseba$starsi[2]
typeof(oseba$ime)
x <- list(a = 1, b = 2, c = "abc")
x[["c"]]
x[[3]]
x$c
x[["c"]]
x[[3]]
x$c
source("~/sola/2.Letnik/Zimski semester/Analiza podatkov s programom R/vaja2_1.R", encoding = 'UTF-8')
source("~/sola/2.Letnik/Zimski semester/Analiza podatkov s programom R/vaja2_1.R", encoding = 'UTF-8')
# Do komponent vektorjev lahko dostopamo tudi z njihovimi imeni.
# V R-ju je že vgrajen vektor `islands` površin največjih otokov na Zemlji.
# Do komponent lahko dostopamo kot poprej.
islands[c(13, 16, 8)] # 13., 16. in 8. otok, urejeno po abecedi
islands[islands < 100] # otoki s površino, manjšo od 100 kvadratnih milj
islands[]
# Lahko pa do komponent dostopamo direktno po imenih.
islands["Britain"] # površina Velike Britanije
islands[c("Honshu", "Kyushu", "Hokkaido", "Shikoku")] # japonski otoki
# Če imena ni, dobimo vrednost NA (not available).
islands["Blejski otok"]
# V ozadju R uporablja vektor imen, do katerega lahko dostopamo s funkcijo
# `names`.
names(islands)
# Vektorje z imeni lahko s funkcijo `c` sestavimo tudi direktno.
matematika <- c(4, 2, 5, 3)
names(matematika) <- c("Janez", "Micka", "Lojzka", "Franci")
matematika
# Če želimo uvesti urejenost za imenske spremenljivke, si lahko pomagamo s
# funkcijo `factor`.
opisne.ocene <- c("manj uspešno", "uspešno", "zelo uspešno")
telovadba <- c("manj uspešno", "zelo uspešno", "uspešno", "uspešno")
Telovadba <- factor(telovadba, levels=opisne.ocene, ordered=TRUE)
Telovadba
# S funkcijo `data.frame` lahko podatke iz vektorjev spravimo v razpredelnico.
Sola <- data.frame(matematika, sportna.vzgoja=Telovadba)
Sola
# Uporabimo lahko tudi funkcijo `tibble` iz knjižnice `tibble`
library(tibble)
Sola.t <- tibble(matematika, sportna.vzgoja=Telovadba)
Sola.t <- as_tibble(Sola)
View(Sola.t)
View(Sola)
View(Sola.t)
# Kaj delajo funkcije `rownames`, `colnames`, `names`, `nrow`, `ncol` in `dim`?
rownames(Sola)
colnames(Sola)
names(Sola)
nrow(Sola)
ncol(Sola)
dim(Sola)
# Iz razpredelnice lahko dobimo posamezne vrstice in stolpce oziroma celice.
Sola["Franci",]
Sola[, "matematika"]
Sola["Micka", "sportna.vzgoja"]
Sola[c(1,3),]
Sola[c(1,3),"matematika"]
Sola[c(1,3),1]
Sola$matematika
Sola[["matematika"]]
Sola[1:2,"matematika"]
Sola[1:2,"matematika", drop = FALSE]
Sola.t[1:2,"matematika"]
# Imena stolpcev in vrstic lahko spreminjamo
colnames(Sola) <- c("mat", "sport")
colnames(Sola)[1] <- c("matematika")
Sola
# Navadno ne želimo imeti poimenovanih vrstic, raje temu namenimo dodaten stolpec
rownames(Sola) <- NULL
sola$ime = names(matematika)
Sola$ime = names(matematika)
Sola
# Indeksiramo lahko tudi z logičnim pogojem
Sola[Sola$matematika >= 3,]
Sola[Sola$matematika >= 3, 1]
Sola[Sola$matematika >= 3, ][[1]]
Sola[Sola$matematika >= 3, ]$matematika
Sola[Sola$matematika >= 3, "matematika"]
# Funkcija `summary`
summary(Sola)
otoki = islands * 2,58999
otoki = islands * 2.58999
otoki
islands
c(1,2,3) * 2
Otoki = tibble(otoki,islands)
Otoki
View(Otoki)
Otoki = tibble(otoki,islands,names(islands))
Otoki
View(Otoki)
# `Otoki` s stolpci `drzava`, `kvadratni.kilometri`, `kvadratne.milje` in
# `kategorija`, pri čemer je zadnja urejenostna spremenljivka z
# vrednostmi
#
# * `"celina"`, če je površina otoka nad 5000 km^2,
# * `"velik otok"`, če je površina med 100 km^2 in 5000 km^2,
# * `"majhen otok"`, če je površina pod 100 km^2.
#
# Velikosti v kvadratnih kilometrih naj bodo zaokrožene na celo število.
# ========================================================================
velikost = otoki
velikost[velikost>5000] = "celina"
velikost[velikost>100 & velikost<5000] = "velik otok"
velikost[velikost<100]="majhen otok"
Otoki = tibble("ime otoka" = names(islands), otoki,islands, velikost)
Otoki
View(Otoki)
# `Otoki` s stolpci `drzava`, `kvadratni.kilometri`, `kvadratne.milje` in
# `kategorija`, pri čemer je zadnja urejenostna spremenljivka z
# vrednostmi
#
# * `"celina"`, če je površina otoka nad 5000 km^2,
# * `"velik otok"`, če je površina med 100 km^2 in 5000 km^2,
# * `"majhen otok"`, če je površina pod 100 km^2.
#
# Velikosti v kvadratnih kilometrih naj bodo zaokrožene na celo število.
# ========================================================================
velikost = otoki
velikost[velikost>=5000] = "celina"
velikost[velikost>=100 & velikost<5000] = "velik otok"
velikost[velikost<100]="majhen otok"
Otoki = tibble("ime otoka" = names(islands), otoki,islands, velikost)
Otoki
velikost[velikost<100] = "majhen otok"
Otoki = tibble("ime otoka" = names(islands), otoki,islands, velikost)
# `Otoki` s stolpci `drzava`, `kvadratni.kilometri`, `kvadratne.milje` in
# `kategorija`, pri čemer je zadnja urejenostna spremenljivka z
# vrednostmi
#
# * `"celina"`, če je površina otoka nad 5000 km^2,
# * `"velik otok"`, če je površina med 100 km^2 in 5000 km^2,
# * `"majhen otok"`, če je površina pod 100 km^2.
#
# Velikosti v kvadratnih kilometrih naj bodo zaokrožene na celo število.
# ========================================================================
velikost = otoki
velikost[velikost>=5000] = "celina"
velikost[velikost>=100 & velikost<5000] = "velik otok"
velikost[velikost<100] = "majhen otok"
Otoki = tibble("ime otoka" = names(islands), "velikost v km^2"= otoki,"velikost v mil^2"=islands, velikost)
Otoki
View(Otoki)
View(Otoki)
# `Otoki` s stolpci `drzava`, `kvadratni.kilometri`, `kvadratne.milje` in
# `kategorija`, pri čemer je zadnja urejenostna spremenljivka z
# vrednostmi
#
# * `"celina"`, če je površina otoka nad 5000 km^2,
# * `"velik otok"`, če je površina med 100 km^2 in 5000 km^2,
# * `"majhen otok"`, če je površina pod 100 km^2.
#
# Velikosti v kvadratnih kilometrih naj bodo zaokrožene na celo število.
# ========================================================================
velikost = list(otoki)
velikost[velikost>=5000] = "celina"
velikost[velikost>=100 & velikost<5000] = "velik otok"
velikost[velikost<100] = "majhen otok"
Otoki = tibble("ime otoka" = names(islands), "velikost v km^2"= otoki,"velikost v mil^2"=islands, velikost)
# `Otoki` s stolpci `drzava`, `kvadratni.kilometri`, `kvadratne.milje` in
# `kategorija`, pri čemer je zadnja urejenostna spremenljivka z
# vrednostmi
#
# * `"celina"`, če je površina otoka nad 5000 km^2,
# * `"velik otok"`, če je površina med 100 km^2 in 5000 km^2,
# * `"majhen otok"`, če je površina pod 100 km^2.
#
# Velikosti v kvadratnih kilometrih naj bodo zaokrožene na celo število.
# ========================================================================
velikost = otoki
velikost[otoki>=5000] = "celina"
# `Otoki` s stolpci `drzava`, `kvadratni.kilometri`, `kvadratne.milje` in
# `kategorija`, pri čemer je zadnja urejenostna spremenljivka z
# vrednostmi
#
# * `"celina"`, če je površina otoka nad 5000 km^2,
# * `"velik otok"`, če je površina med 100 km^2 in 5000 km^2,
# * `"majhen otok"`, če je površina pod 100 km^2.
#
# Velikosti v kvadratnih kilometrih naj bodo zaokrožene na celo število.
# ========================================================================
velikost = otoki
velikost[otoki>=5000] = "celina"
velikost[otoki>=100 & otoki<5000] = "velik otok"
velikost[otoki<100] = "majhen otok"
Otoki = tibble("ime otoka" = names(islands), "velikost v km^2"= otoki,"velikost v mil^2"=islands, velikost)
Otoki
# `Otoki` s stolpci `drzava`, `kvadratni.kilometri`, `kvadratne.milje` in
# `kategorija`, pri čemer je zadnja urejenostna spremenljivka z
# vrednostmi
#
# * `"celina"`, če je površina otoka nad 5000 km^2,
# * `"velik otok"`, če je površina med 100 km^2 in 5000 km^2,
# * `"majhen otok"`, če je površina pod 100 km^2.
#
# Velikosti v kvadratnih kilometrih naj bodo zaokrožene na celo število.
# ========================================================================
velikost = otoki
velikost[otoki>=5000] = "celina"
velikost[otoki>=100 & otoki<5000] = "velik otok"
velikost[otoki<100] = "majhen otok"
Velikost = factor(velikost, levels = c("majhen otok", "velik otok", "celina"), ordered = True)
Otoki = tibble("ime otoka" = names(islands), "velikost v km^2"= otoki,"velikost v mil^2"=islands, Velikost)
View(Otoki)
View(Otoki)
Velikost = factor(velikost, levels = c("majhen otok", "velik otok", "celina"), ordered = True)
Velikost = factor(velikost, levels = c("majhen otok", "velik otok", "celina"), ordered=T )
Otoki = tibble("ime otoka" = names(islands), "velikost v km^2"= otoki,"velikost v mil^2"=islands, Velikost)
Velikost
source("~/sola/2.Letnik/Zimski semester/Analiza podatkov s programom R/vaja2_2.R", encoding = 'UTF-8')
setwd("~/sola/3.Letnik/Poletni_semester/OPB")
source("~/.active-rstudio-document", echo=TRUE)
# xls files
my_data <- read_excel("Artikli.xlsx")
source("~/.active-rstudio-document", echo=TRUE)
View(my_data)
my_data(1)
my_data[1]
my_data[1]
# xls files
my_data <- read_excel("Artikli - Copy.xlsx")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
View(my_data)
ah<-read_excel("Artikli.xlsx",
sheet = 6)
View(ah)
colour <-read_excel("Artikli.xlsx",
sheet = 6)
View(colour)
colour <-read_excel("Artikli.xlsx",
sheet = 7)
SKU<-read_excel("Artikli.xlsx",
sheet = 2)
View(SKU)
StudentDet<-read_excel("Artikli.xlsx",
sheet = 3)
View(StudentDet)
source("~/.active-rstudio-document", echo=TRUE)
warnings()
View(colour_codes)
